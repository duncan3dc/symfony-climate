on:
  push:
  schedule:
    - cron: 0 10 16 * *

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        composer:
          - ""
          - "--prefer-lowest"
        symfony:
          - ""
          - "5.0"
          - "6.0"
        include:
          - php: "7.4"
            symfony: ""
            composer: ""
          - php: "7.4"
            symfony: ""
            composer: "--prefer-lowest"
          - php: "7.4"
            symfony: "5.0"
            composer: ""
          - php: "7.4"
            symfony: "5.0"
            composer: "--prefer-lowest"

    steps:
      - uses: actions/checkout@v1

      - name: Create Docker Container
        run: |
          docker build . -t ci-image --build-arg PHP_VERSION=${{ matrix.php }}
          docker run --interactive --detach --volume ${{ github.workspace }}:/app --name ci ci-image

      - name: Install Dependencies
        run: |
          docker exec ci .github/symfony.php ${{ matrix.symfony }}
          docker exec ci composer update --no-interaction --no-ansi --prefer-dist ${{ matrix.composer }}

      - name: PHPUnit
        run: docker exec ci vendor/bin/phpunit

      - name: PHPStan
        run: |
          docker exec ci vendor/bin/phpstan analyse --level=max src
          docker exec ci vendor/bin/phpstan analyse --level=max --configuration=phpstan-tests.neon tests

      - name: Coding Standards
        run: docker exec ci vendor/bin/phpcs --standard=PSR1,PSR2,PSR12 src tests

      - name: Check Dependencies
        run: docker exec ci vendor/bin/composer-require-checker

      - name: Composer Validate
        run: docker exec ci composer validate --strict
